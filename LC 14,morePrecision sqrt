#include <iostream>
using namespace std;
class SquareRoot {
public:
    static long long int sqrtInteger(int n) {
        if (n == 0) return 0;  // Special case for 0

        int start = 1;
        int end = n;
        int ans = 0;

        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (mid <= n / mid) {
                ans = mid;
                start = mid + 1;
            } else {
                end = mid - 1;
            }
        }

        return ans;
    }
};

double morePrecision(int n, int precision, int tempSol) {
    double factor = 1.0;
    double ans = tempSol;

    for (int i = 0; i < precision; i++) {
        factor = factor / 10;

        for (double j = ans; j * j <= n; j += factor) {
            ans = j;
        }
    }
    return ans;
}

int main() {
    int n;
    cout << "Enter the number: ";
    cin >> n;

    int tempSol = SquareRoot::sqrtInteger(n);
    cout << "Answer is: " << morePrecision(n, 3, tempSol) << endl;

    return 0;
}
